@import "reset";
// @import "legacy-browser";
@import "base";

// .masthead{
//   overflow: hidden;
//   width: 100%;
//   display: inline-block;
//   position: relative;
//   background-color: blue;
// }

.masthead{
  top: 0;
  left: 0;
  overflow: hidden;
  width: 100%;
  display: block;
  position: relative;
  background-color: rgba(3, 62, 102, 1);
}

.middle-container{
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  position: absolute;
  text-align: center;
}

.inner-container{
color: white;
font-size: 18px;
max-width: 700px;
line-height: 1.4;
padding-left: 20px;
padding-right: 20px;
position: relative;
top: 50%;
transform: translateY(-50%);
-webkit-transform: translateY(-50%);
-ms-transform: translateY(-50%);
  margin: 0 auto;
}
// .content{
//   color: white;
//   line-height: 1.4;
//   font-size: 20px;
//   max-width: 700px;
//
// }

.masthead-bg{
  opacity: 0.3;
  top: 0;
  right: 0;
  width: 100%;
  height: 90vh;
position: relative;
@include blue-img('../images/home-hero-small.jpg');
}

//comment

.image-2{
  height: 500px;
  width: 33%;
  @include blue-img('../images/325-Lex-AD-E7-UNCROPPED.jpg');
  float: left;
  background-width: 33%;
  position: relative;
}




















$bg-color: black;
$hover-color: #16a885;
$text-color: #ffffff;

$primary-color: green; // now whenever I want to add green to something I do:


// if I ever want to change everything to red, I can just change the green to red and everything in my page will change as well

////////////// MIXINS

@mixin border-radius{ // take this code and mix it into something else
  -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
      -ms-border-radius: 5px;
    border-radius: 5px;
}

// or if you don't want a set 5px radius you can add parameter
@mixin radius($radius){
  -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
      -ms-border-radius: $radius;
    border-radius: $radius;
}

////////////// OPERATIONS
$buttonBackground: #123456;
$buttonColor: white;
$buttonPadding: 5px;

.button{
  background: $buttonBackground;
  border-radius: 8px;
  color: $buttonColor;
  display: inline-block;
  padding: $buttonPadding;
  text-decoration: none;

}

.jumbo-button{
  @extend .button;
  padding: $buttonPadding + 30; // don't need to type px because padding on button already says pixel
}

.light-button{
  @extend .button;
  background: $buttonBackground * 0.3; // when you multiply a color by greater than one it lightens it, less than 1 darkens it

  // this works well for hover effects, just make image a little lighter on hovers
}

/////////////// nesting
nav {
    ul{ // only apply these styles if I'm inside nav bar
      background: $bg-color;
      margin: 0;
      padding: 0;
      list-style: none;
    }

    li{
      display: inline-block;
    }

    a{
      color: $text-color;
      display: inline-block;
      padding: 10px 16px;
      text-decoration: none;
    }

    a:hover{
      background-color: $hover-color;
    }
}



///////////////// EXTEND
// if something shares almost the same general styling use extend keyword. It allows you to use CSS inside other rules.

.panel{
  // this class will have shared property among all panels
  border: 3px solid blue;
  background-color: lightgreen;
  margin: 10px;
}

// now little panel and big panel will inherit properties from .panel

.little-panel{
  @extend .panel;
  font-size: 20px;
  padding: 5px;
  @include radius(10px); // mixin is included here
}

.big-panel{
  @extend .panel;
  font-size: 30px;
  padding: 20px;
}



/////////////// COLOR TESTS
