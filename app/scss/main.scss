@import "reset";
@import "base";
@import "typography";
@import "nav";
@import "button";


/* styling for header content */
.masthead{
  position: relative;
  @extend .base-positioning;
  @extend .blue-bg;
}

.outer-container{
  @extend .base-positioning;
  height: 100%;
  position: absolute;
  text-align: center;
}

.inner-container-narrow{
  @include container-width(370px);

    .section-title{
      @extend .title;
      color: $text-lightblue;
      padding-bottom: 30px;
    }

    .description{
      @extend .paragraph;
      color: $text-white;
    }
}

.masthead-bg{
  position: relative;
  @extend .header-background-positioning;
  @include blue-img('../images/home-hero-small.jpg');
}

.overlayc{
  position: absolute;
  @extend .header-background-positioning;
  @include blue-img('../images/overlay-c.png');
  opacity: 0.5;
}





.image-2{
  height: 500px;
  width: 33%;
  @include blue-img('../images/325-Lex-AD-E7-UNCROPPED.jpg');
  float: left;
  background-width: 33%;
  position: relative;
}




















$bg-color: black;
$hover-color: #16a885;
$text-color: #ffffff;

$primary-color: green; // now whenever I want to add green to something I do:


// if I ever want to change everything to red, I can just change the green to red and everything in my page will change as well

////////////// MIXINS

@mixin border-radius{ // take this code and mix it into something else
  -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
      -ms-border-radius: 5px;
    border-radius: 5px;
}

// or if you don't want a set 5px radius you can add parameter
@mixin radius($radius){
  -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
      -ms-border-radius: $radius;
    border-radius: $radius;
}

////////////// OPERATIONS
$buttonBackground: #123456;
$buttonColor: white;
$buttonPadding: 5px;

// .button{
//   background: $buttonBackground;
//   border-radius: 8px;
//   color: $buttonColor;
//   display: inline-block;
//   padding: $buttonPadding;
//   text-decoration: none;
//
// }

.jumbo-button{

  padding: $buttonPadding + 30; // don't need to type px because padding on button already says pixel
}

.light-button{

  background: $buttonBackground * 0.3; // when you multiply a color by greater than one it lightens it, less than 1 darkens it

  // this works well for hover effects, just make image a little lighter on hovers
}

/////////////// nesting
// nav {
//     ul{ // only apply these styles if I'm inside nav bar
//       background: $bg-color;
//       margin: 0;
//       padding: 0;
//       list-style: none;
//     }
//
//     li{
//       display: inline-block;
//     }
//
//     a{
//       color: $text-color;
//       display: inline-block;
//       padding: 10px 16px;
//       text-decoration: none;
//     }
//
//     a:hover{
//       background-color: $hover-color;
//     }
// }



///////////////// EXTEND
// if something shares almost the same general styling use extend keyword. It allows you to use CSS inside other rules.

.panel{
  // this class will have shared property among all panels
  border: 3px solid blue;
  background-color: lightgreen;
  margin: 10px;
}

// now little panel and big panel will inherit properties from .panel

.little-panel{
  @extend .panel;
  font-size: 20px;
  padding: 5px;
  @include radius(10px); // mixin is included here
}

.big-panel{
  @extend .panel;
  font-size: 30px;
  padding: 20px;
}



/////////////// COLOR TESTS
